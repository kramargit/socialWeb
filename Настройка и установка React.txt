Нет, нет необходимости запускать команду create-react-app, когда вы используете Parcel в качестве упаковщика. 
create-react-app — это инструмент, предоставляющий предварительно настроенную среду разработки React, включая Webpack в качестве сборщика по умолчанию.

Если вы используете Parcel в качестве упаковщика, вы можете запустить новый проект React с нуля и настроить его для работы с Parcel, 
установив необходимые зависимости и настроив файлы конфигурации вручную. Это дает вам больше гибкости и контроля над конфигурацией вашего проекта.

Чтобы начать работу с новым проектом React с использованием Parcel, вы можете выполнить следующие общие шаги:

1. Создайте новый каталог для своего проекта и перейдите к нему в терминале.

2. Инициализируйте новый проект Node.js с помощью npm init.

3. Установите необходимые зависимости: npm install react response-dom package-bundler.

4. Создайте файл index.html и файл index.js в корневом каталоге вашего проекта.

5. Добавьте код HTML и React в index.html и index.js соответственно.

6. Настройте Parcel, добавив файл .parcelrc в каталог проекта или включив параметры конфигурации непосредственно в файл package.json.

Вот пример файла .parcelrc, который вы можете использовать для настройки Parcel для базового проекта React:

{
  "extends": "@parcel/config-default",
  "targets": {
    "index.html": {
      "publicUrl": "./",
      "sourceMap": true
    }
  },
  "plugins": {
    "@parcel/transformer-jsx": {}
  }
}

Этот файл конфигурации указывает Parcel создать файл index.html с относительным общедоступным URL-адресом и 
использовать исходные карты для улучшения отладки. Он также включает плагин @parcel/transformer-jsx, 
который позволяет вам использовать синтаксис JSX в вашем коде JavaScript.

После того, как вы настроили свой проект, вы можете запустить сервер разработки, запустив npm run start, 
и создать производственную версию своего приложения, запустив npm run build.